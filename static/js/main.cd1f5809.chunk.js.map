{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactsList/ContactsList.module.scss","App.module.scss","components/Container/Container.module.scss","components/Filter/Filter.module.scss","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactsList/ContactsList.js","App.js","hooks/useLocalStorage.js","reportWebVitals.js","index.js"],"names":["module","exports","Container","children","className","styles","container","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleInputChange","e","currentTarget","value","reset","form","preventDefault","type","pattern","title","onChange","required","btn","Filter","filter","find","ContactsList","friends","onDeleteContacts","list","map","id","onClick","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","saveContacts","contacts","setContacts","setFilter","contact","uuidv4","toLowerCase","alert","prevState","subtitle","includes","contactId","prevContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd1f5809.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1NUCn\",\"btn\":\"ContactForm_btn___G3Mm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__1I0e0\",\"btn\":\"ContactsList_btn__cayO-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__2jCjM\",\"subtitle\":\"App_subtitle__iWHAK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3jJxF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"find\":\"Filter_find__1JI6W\"};","import styles from './Container.module.scss';\nimport PropTypes from 'prop-types';\n\nconst Container = ({ children }) => {\n  return <div className={styles.container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import { useState } from 'react';\nimport styles from './ContactForm.module.scss';\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(name, number);\n    return reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          onChange={handleInputChange}\n          required\n        />\n      </label>\n      <label>\n        Phone number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          onChange={handleInputChange}\n          required\n        />\n      </label>\n\n      <button className={styles.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport styles from './Filter.module.scss';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <label className={styles.find}>\n      Find contacts by name\n      <input type=\"text\" value={filter} onChange={onChange} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport styles from './ContactsList.module.scss';\n\nconst ContactsList = ({ friends, onDeleteContacts }) => {\n  return (\n    <ul className={styles.list}>\n      {friends.map(({ id, name, number }) => (\n        <li key={id}>\n          {name}: {number}\n          <button\n            className={styles.btn}\n            type=\"button\"\n            onClick={() => onDeleteContacts(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContacts: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import { useState } from 'react';\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactsList from './components/ContactsList';\nimport styles from './App.module.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport saveContacts from './data/saveContacts.json';\n\nexport default function App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', saveContacts);\n  const [filter, setFilter] = useState('');\n\n  const addContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    const findContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (findContact) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    setContacts(prevState => [contact, ...prevState]);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(prevContacts =>\n      prevContacts.filter(contact => contact.id !== contactId),\n    );\n  };\n\n  const handleFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getFilterContact = () => {\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n    return filteredContacts;\n  };\n\n  return (\n    <Container>\n      <h1 className={styles.title}>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2 className={styles.subtitle}>Contacts</h2>\n      <Filter onChange={handleFilter} filter={filter} />\n      <ContactsList\n        friends={getFilterContact()}\n        onDeleteContacts={deleteContact}\n      />\n    </Container>\n  );\n}\n","import { useState, useEffect } from 'react';\n\nexport default function useLocalStorage(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/modern-normalize/modern-normalize.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}